Q1: Lambda function is an anynonmous function which can take any number of arguments but return a single expression. It is different from normal function as we do not def keyword to start it and it has no name.It is a single line function.
Q2: Yes we can have many arguments in lambda function eg we need to return sum of two numbers with lambda function we can simply write 
sum = lambda x, y: x + y
print(sum(10, 20))
Q3: lambda functions have best use case inside other functions to return the result eg
def apply(fx, value):
   return 6 + fx(value)

square = lambda x: x*x


result = apply(square, 6)
print(result)
Here apply is a function which takes another function as argument and a value Inside the apply function we add 6 to function which takes value as argument then when we call the apply function we give it square function which is a lambda function as arguemnt, square lambda function takes 6 as argument square it and then returns result to apply function where 6 is added to it and then we return the result in variable result and print it on our console.

Q4: Advantage of lambda function is that we can write simply functions in one line using lambda and the disadvantage is that where we need loops nested loops and complex code we cant use lambda function over there

Q5: No: 
def input():
    x = int(input("Enter the value of number: "))
input()

sq = lambda i: i*i

print(sq(x))

Q6:
 square = lambda x: x**2

print(square(4))

Q7:
 from functools import reduce

list1 = [1000,2, 4, 6, 100]
maxi = reduce((lambda x,y: x if x > y else y), list1)


print(maxi)

Q8: lst = [1, 3, 4, 6, 10, 13, 16, 21, 22, 32]

newL = list(filter(lambda x: x % 2 == 0, lst))
print(newL)


Q9:
 sens = ["we are", "We", "i can never be an angel"]
sortedList = sorted(sens, key=lambda x: len(x))

print(sortedList)

Q10:lst1 = [1, 2, 14, 3, 21, 12]
lst2 = [100, 2, 13, 3, 200, 21]

newlst = lambda x, y: [i for i in x if i in y]

print(newlst(lst1, lst2))

Q11: 
def factorial(n):
    if n <= 1:
        return 1
    else:
        return n * factorial(n-1)


result = factorial(5)
print(result)

Q12:
 def fibonacci(n):
    if n<=1:
        return 1
    else:
        return (fibonacci(n-1) + fibonacci(n-2))

fibo = fibonacci(5)
print(fibo)

Q13:
def sum(l):
    if len(l) < 1:
        return 0
    else:
        for i in l:
            l.remove(i)
            return i + sum(l)

res = sum(lst)
print(res)



Q14: 
def palindrome(word):
    if len(word)<1:
        return True
    else:
        if word[0] == word[-1]:
            return palindrome(word[1:-1])
        else:
            return False

a = input("Enter the word: ")
res = palindrome(a)

if(res):
    print("Word is palindrome")
else:
    print("Word is not palindrome")


Q15:
def gcd(a,b):
    if(b==0):
        return a
    else:
        return gcd(b,a%b)
a=int(input("Enter first number:"))
b=int(input("Enter second number:"))
GCD=gcd(a,b)
print("GCD is: ")
print(GCD)




